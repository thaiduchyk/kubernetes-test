version: 2.1
orbs:
  aws-eks: circleci/aws-eks@1.1.0
  aws-ecr: circleci/aws-ecr@7.2.0
  kubernetes: circleci/kubernetes@1.0.2

parameters:
  create_cluster:
    type: boolean
    default: false
  run_build:
    type: boolean
    default: true

jobs:
  create-kube-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - run:
          name: Install the eksctl tool
          command: |
            if which eksctl > /dev/null; then
              echo "eksctl is already installed"
            exit 0
            fi
            mkdir -p eksctl_download
            curl --silent --location --retry 5 "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" \
            | tar xz -C eksctl_download
            chmod +x eksctl_download/eksctl
            SUDO=""
            if [ $(id -u) -ne 0 ] && which sudo > /dev/null ; then
              SUDO="sudo"
            fi
            $SUDO mv eksctl_download/eksctl /usr/local/bin/
            rmdir eksctl_download
      - aws-eks/create-cluster:
          cluster-name: << parameters.cluster-name >>
          aws-region: $AWS_REGION
          node-type: t3.micro
          node-volume-size: 5
          nodes: 3
          verbose: 5
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
          aws-region: $AWS_REGION
      - kubernetes/create-or-update-resource:
          resource-file-path: "deploy/deployment.web.yml"
          get-rollout-status: true
          resource-name: deployment/shipyard-web
      - kubernetes/create-or-update-resource:
         resource-file-path: "deploy/deployment.worker.yml"
         get-rollout-status: false
         resource-name: deployment/shipyard-worker
      - kubernetes/create-or-update-resource:
          resource-file-path: "deploy/service.web.yml"
          resource-name: service/shipyard-load-balancer

  update-image:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        type: string
      container-image-updates:
        type: string
      resource-name:
        type: string
    steps:
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
          aws-region: $AWS_REGION
      - kubernetes/update-container-image:
          container-image-updates: << parameters.container-image-updates >>
          resource-name: << parameters.resource-name >>
          show-kubectl-command: true
          watch-rollout-status: true


workflows:
  create-cluster:
    when: << pipeline.parameters.create_cluster >>
    jobs:
    - create-kube-cluster:
       cluster-name: shipyard-cluster

  build-and-deploy:
    when: << pipeline.parameters.run_build >>
    jobs:
      - aws-ecr/build-and-push-image:
          repo: shipyard
          tag: $CIRCLE_SHA1,latest,$CIRCLE_TAG
          filters:
            tags:
              only : /.*/
      - update-image:
          cluster-name: shipyard-cluster
          resource-name: deployment/shipyard-web
          container-image-updates: app=666658136021.dkr.ecr.eu-central-1.amazonaws.com/shipyard:$CIRCLE_TAG
          requires:
            - aws-ecr/build-and-push-image
          filters:
            branches:
              ignore: /.*/
            tags:
              only : /^rel-.*/
